/**
 * CSS GRID LAYOUT
 */

/* Grid base */

.grid,
.grid-c,
.grid-c0 {
  grid-gap: $gutter-row $gutter-col;

  @if $auto-rows != auto {
    grid-auto-rows: $auto-rows;
  }

  @if $auto-cols != auto {
    grid-auto-columns: $auto-cols;
  }

  @media $l {
    grid-gap: $gutter-row-large $gutter-col-large;
  }
}

/* Compact gaps between rows and columns */

/* stylelint-disable declaration-no-important */
.grid-c { grid-gap: $gutter-compact !important; }
.grid-c0 { grid-gap: 0 0 !important; }
/* stylelint-enable */

.col-fluid { grid-template-columns: auto; }

/*
  .<RESPONSIVE><BASE><MOD>

  RESPONSIVE
        = (no prefix) default small
    ns- = not small screen breakpoint; anything medium or bigger
    m- = medium screen breakpoint
    l- = large screen breakpoint

  BASE
    x = number of columns in grid
    y = number of rows in grid
    c = starting column
    r = starting row
    w = item width
    h = item height

  MOD
    cols = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
    rows = 1, 2, 3, 4, 5, 6

*/

/* TODO: Optimise loops for best compression */

@each $step in $col-steps {
  .x$(step) { grid-template-columns: repeat($step, $item-size); }
  .c$(step) { grid-column-start: $step; }
  .w$(step) { grid-column-end: span $step; }

  @each $bp in $breakpoints {
    @include at-media($bp) {
      .$(bp)-x$(step) { grid-template-columns: repeat($step, $item-size); }
      .$(bp)-c$(step) { grid-column-start: $step; }
      .$(bp)-w$(step) { grid-column-end: span $step; }
    }
  }
}

@each $step in $row-steps {
  .y$(step) { grid-template-rows: repeat($step, auto); }
  .r$(step) { grid-row-start: $step; }
  .h$(step) { grid-row-end: span $step; }

  @each $bp in $breakpoints {
    @include at-media($bp) {
      .$(bp)-y$(step) { grid-template-rows: repeat($step, auto); }
      .$(bp)-r$(step) { grid-row-start: $step; }
      .$(bp)-h$(step) { grid-row-end: span $step; }
    }
  }
}

/* FIXME: Rename these to make them easier to understand and shorter */

.middle {
  align-items: center;
  justify-content: center;
}

.align-row-start { justify-items: start; }
.align-row-end { justify-items: end; }
.align-row-center { justify-items: center; }
.align-row-stretch { justify-items: stretch; } /* default */

.align-col-start { align-items: start; }
.align-col-end { align-items: end; }
.align-col-center { align-items: center; }
.align-col-stretch { align-items: stretch; } /* default */

.align-item-row-start { justify-self: start; }
.align-item-row-end { justify-self: end; }
.align-item-row-center { justify-self: center; }
.align-item-row-stretch { justify-self: stretch; } /* default */

.align-item-col-start { align-self: start; }
.align-item-col-end { align-self: end; }
.align-item-col-center { align-self: center; }
.align-item-col-stretch { align-self: stretch; } /* default */

.justify-row-start { justify-content: start; }
.justify-row-end { justify-content: end; }
.justify-row-center { justify-content: center; }
.justify-row-space-around { justify-content: space-around; }
.justify-row-space-between { justify-content: space-between; }
.justify-row-space-evenly { justify-content: space-evenly; }
.justify-row-stretch { justify-content: stretch; } /* default */

.justify-col-start { align-content: start; }
.justify-col-end { align-content: end; }
.justify-col-center { align-content: center; }
.justify-col-space-around { align-content: space-around; }
.justify-col-space-between { align-content: space-between; }
.justify-col-space-evenly { align-content: space-evenly; }
.justify-col-stretch { align-content: stretch; } /* default */

.flow-row-dense { grid-auto-flow: row dense; }
.flow-row { grid-auto-flow: row; }

.flow-col-dense { grid-auto-flow: column dense; }
.flow-col { grid-auto-flow: column; } /* default */

@each $bp in $breakpoints {
  @include at-media($bp) {
    .$(bp)-middle {
      align-items: center;
      justify-content: center;
    }

    .$(bp)-align-row-start { justify-items: start; }
    .$(bp)-align-row-end { justify-items: end; }
    .$(bp)-align-row-center { justify-items: center; }
    .$(bp)-align-row-stretch { justify-items: stretch; }

    .$(bp)-align-col-start { align-items: start; }
    .$(bp)-align-col-end { align-items: end; }
    .$(bp)-align-col-center { align-items: center; }
    .$(bp)-align-col-stretch { align-items: stretch; }

    .$(bp)-align-item-row-start { justify-self: start; }
    .$(bp)-align-item-row-end { justify-self: end; }
    .$(bp)-align-item-row-center { justify-self: center; }
    .$(bp)-align-item-row-stretch { justify-self: stretch; }

    .$(bp)-align-item-col-start { align-self: start; }
    .$(bp)-align-item-col-end { align-self: end; }
    .$(bp)-align-item-col-center { align-self: center; }
    .$(bp)-align-item-col-stretch { align-self: stretch; }

    .$(bp)-justify-row-start { justify-content: start; }
    .$(bp)-justify-row-end { justify-content: end; }
    .$(bp)-justify-row-center { justify-content: center; }
    .$(bp)-justify-row-space-around { justify-content: space-around; }
    .$(bp)-justify-row-space-between { justify-content: space-between; }
    .$(bp)-justify-row-space-evenly { justify-content: space-evenly; }
    .$(bp)-justify-row-stretch { justify-content: stretch; }

    .$(bp)-justify-col-start { align-content: start; }
    .$(bp)-justify-col-end { align-content: end; }
    .$(bp)-justify-col-center { align-content: center; }
    .$(bp)-justify-col-space-around { align-content: space-around; }
    .$(bp)-justify-col-space-between { align-content: space-between; }
    .$(bp)-justify-col-space-evenly { align-content: space-evenly; }
    .$(bp)-justify-col-stretch { align-content: stretch; }

    .$(bp)-flow-row-dense { grid-auto-flow: row dense; }
    .$(bp)-flow-row { grid-auto-flow: row; }

    .$(bp)-flow-col-dense { grid-auto-flow: column dense; }
    .$(bp)-flow-col { grid-auto-flow: column; }
  }
}
