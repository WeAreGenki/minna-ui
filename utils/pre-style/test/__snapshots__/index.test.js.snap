// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Svelte style preprocessor adds a banner comment 1`] = `
"
<div id=\\"target\\">test</div>

<style>
  #target {
    color: red;
  }

    #target:focus {
      background: #000;
    }
</style>
"
`;

exports[`Svelte style preprocessor compiles a component's CSS 1`] = `
":root{--body-margin:0}@media screen and (min-width: 30em){body{margin:var(--body-margin)
  }}.text.svelte-1qwrmfn{color:rgb(255, 0, 0)}.text.svelte-1qwrmfn:focus{background:rgb(0, 0, 0)}.wrapper.svelte-1qwrmfn>.text.svelte-1qwrmfn{margin-top:1rem}"
`;

exports[`Svelte style preprocessor does not process without type attribute 1`] = `
"
<div id=\\"target\\">test</div>

<style>
  #target {
    color: red;

    &:focus {
      background: #000;
    }
  }
</style>
"
`;

exports[`Svelte style preprocessor processes a component 1`] = `
"<!--
  TEST COMPONENT

  A simple Svelte component for use in tests.

  NOTE:
    In the code, object properties starting with _ are safe to mangle; the name
    can be shortened at build time for smaller JavaScript bundles.
-->

<div class=\\"wrapper\\">
  <div class=\\"text\\" ref:_target>test {_name}</div>

  <div class=\\"text\\" ref:_nameReversed>test <span>{_reversed}</span></div>
</div>

<script>
  export default {
    data: () => ({
      _name: 'Elon Musk',
    }),
    computed: {
      _reversed: ({ _name }) =>
        _name
          .split('')
          .reverse()
          .join(''),
    },
  };
</script>

<style>
  $body-margin: 0;

  /* stylelint-disable no-descending-specificity */
  @media screen and (min-width: 30em) {
  :global(body) {
      margin: $body-margin
  }
    }

  .text {
    color: rgb(255, 0, 0);
  }

  /* red */

  .text:focus {
      background: rgb(0, 0, 0); /* black */
    }

  .wrapper > .text {
      margin-top: 1rem;
    }
</style>
"
`;

exports[`Svelte style preprocessor processes a simple component 1`] = `
"
<div id=\\"target\\">test</div>

<style>
  #target {
    color: red;
  }

    #target:focus {
      background: #000;
    }
</style>
"
`;
