/*
  FLEXBOX

  NOTE:
    Things that are shared between both flexbox and CSS grid are found in
    "_grid.css" because this framework prioritises CSS grid first.

*/

/**
 * Much of the time when using flexbox you really just want to vertically align
 * elements, so this class is a shortcut for that.
 */
.dfc {
  display: flex;
  align-items: center;
}

/* Flexbox utilities */

.fwn { flex-wrap: nowrap; } /* default */
.fww { flex-wrap: wrap; }
.fwr { flex-wrap: wrap-reverse; }
.fwu { flex-wrap: unset; }

.f-col { flex-direction: column; }
.f-colr { flex-direction: column-reverse; }
.f-row { flex-direction: row; }
.f-rowr { flex-direction: row-reverse; }

.fba { flex-basis: auto; } /* default */
.fbc { flex-basis: content; }
.fbx { flex-basis: max-content; }
.fbm { flex-basis: min-content; }
.fbf { flex-basis: fit-content; }
.fb0 { flex-basis: 0; }
.fbu { flex-basis: unset; }

.fs0 { flex-shrink: 0; }
.fs1 { flex-shrink: 1; }
.fsu { flex-shrink: unset; }

.fg0 { flex-grow: 0; }
.fg1 { flex-grow: 1; }
.fgu { flex-grow: unset; }

.order-3 { order: -3; }
.order-2 { order: -2; }
.order-1 { order: -1; }
.order0 { order: 0; }
.order1 { order: 1; }
.order2 { order: 2; }
.order3 { order: 3; }
.order4 { order: 4; }
.order5 { order: 5; }
.order6 { order: 6; }
.order7 { order: 7; }
.order8 { order: 8; }
.order9 { order: 9; }
.order-unset { order: unset; }

@each $media, $ext in (var(--breakpoints-media)), (var(--breakpoints)) {
  @media ($media) {
    .$(ext)-dfc {
      display: flex;
      align-items: center;
    }

    .$(ext)-fwn { flex-wrap: nowrap; }
    .$(ext)-fww { flex-wrap: wrap; }
    .$(ext)-fwr { flex-wrap: wrap-reverse; }
    .$(ext)-fwu { flex-wrap: unset; }

    .$(ext)-f-col { flex-direction: column; }
    .$(ext)-f-colr { flex-direction: column-reverse; }
    .$(ext)-f-row { flex-direction: row; }
    .$(ext)-f-rowr { flex-direction: row-reverse; }

    .$(ext)-fba { flex-basis: auto; }
    .$(ext)-fbc { flex-basis: content; }
    .$(ext)-fb-max { flex-basis: max-content; }
    .$(ext)-fb-min { flex-basis: min-content; }
    .$(ext)-fb-fit { flex-basis: fit-content; }
    .$(ext)-fb0 { flex-basis: 0; }
    .$(ext)-fbu { flex-basis: unset; }

    .$(ext)-fs0 { flex-shrink: 0; }
    .$(ext)-fs1 { flex-shrink: 1; }
    .$(ext)-fsu { flex-shrink: unset; }

    .$(ext)-fg0 { flex-grow: 0; }
    .$(ext)-fg1 { flex-grow: 1; }
    .$(ext)-fgu { flex-grow: unset; }

    .$(ext)-order-3 { order: -3; }
    .$(ext)-order-2 { order: -2; }
    .$(ext)-order-1 { order: -1; }
    .$(ext)-order0 { order: 0; }
    .$(ext)-order1 { order: 1; }
    .$(ext)-order2 { order: 2; }
    .$(ext)-order3 { order: 3; }
    .$(ext)-order4 { order: 4; }
    .$(ext)-order5 { order: 5; }
    .$(ext)-order6 { order: 6; }
    .$(ext)-order7 { order: 7; }
    .$(ext)-order8 { order: 8; }
    .$(ext)-order9 { order: 9; }
    .$(ext)-order-unset { order: unset; }
  }
}
